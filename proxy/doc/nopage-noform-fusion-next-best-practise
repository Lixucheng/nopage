{"id":1016889,"slug":"fusion-next-best-practise","title":"Fusion-Next最佳实践","book_id":187346,"book":{"id":187346,"type":"Book","slug":"noform","name":"NoForm","user_id":222786,"description":"NoForm - 让天下没有难做的表单","creator_id":110109,"public":1,"items_count":33,"likes_count":0,"watches_count":4,"content_updated_at":"2019-01-07T03:29:29.431Z","updated_at":"2019-01-07T03:29:29.000Z","created_at":"2018-12-11T00:41:54.000Z","namespace":"nopage/noform","user":{"id":222786,"type":"Group","login":"nopage","name":"NoPage","description":"NoPage - 让天下没有难做的CRUD","avatar_url":"https://gw.alipayobjects.com/zos/rmsportal/SZXCSCJTuhRSmAggBlVp.png","large_avatar_url":"https://gw.alipayobjects.com/zos/rmsportal/SZXCSCJTuhRSmAggBlVp.png?x-oss-process=image/resize,m_fill,w_320,h_320","medium_avatar_url":"https://gw.alipayobjects.com/zos/rmsportal/SZXCSCJTuhRSmAggBlVp.png?x-oss-process=image/resize,m_fill,w_160,h_160","small_avatar_url":"https://gw.alipayobjects.com/zos/rmsportal/SZXCSCJTuhRSmAggBlVp.png?x-oss-process=image/resize,m_fill,w_80,h_80","books_count":5,"public_books_count":4,"followers_count":0,"following_count":0,"created_at":"2018-12-11T00:38:10.000Z","updated_at":"2018-12-11T08:20:27.000Z","_serializer":"v2.user"},"_serializer":"v2.book"},"user_id":110109,"creator":{"id":110109,"type":"User","login":"guishu","name":"鬼鼠","description":null,"avatar_url":"https://cdn.yuque.com/yuque/0/2018/png/110109/1527234002873-avatar/2ccdab19-b7e2-42d6-b097-f42de766f94c.png","large_avatar_url":"https://cdn.yuque.com/yuque/0/2018/png/110109/1527234002873-avatar/2ccdab19-b7e2-42d6-b097-f42de766f94c.png?x-oss-process=image/resize,m_fill,w_320,h_320","medium_avatar_url":"https://cdn.yuque.com/yuque/0/2018/png/110109/1527234002873-avatar/2ccdab19-b7e2-42d6-b097-f42de766f94c.png?x-oss-process=image/resize,m_fill,w_160,h_160","small_avatar_url":"https://cdn.yuque.com/yuque/0/2018/png/110109/1527234002873-avatar/2ccdab19-b7e2-42d6-b097-f42de766f94c.png?x-oss-process=image/resize,m_fill,w_80,h_80","books_count":4,"public_books_count":2,"followers_count":0,"following_count":0,"created_at":"2018-04-24T06:58:34.000Z","updated_at":"2019-01-02T09:12:32.000Z","_serializer":"v2.user"},"format":"asl","body":"","body_draft":"","body_html":"<div data-type=\"p\">本文会使用create-react-app作为脚手架，然后在创建的工程里使用 NoForm 和 next 组件 的结合，快速的编写表单应用。</div><div data-type=\"p\"></div><div data-type=\"p\">当然，你也可以直接clone <a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://github.com/quirkyshop/noform-start-app\" class=\"bi-link\">这个项目</a> 在这里面我们集成了各种实用的例子。</div><div data-type=\"p\"></div><h3 id=\"ge94or\" data-type=\"h\"><a class=\"anchor\" id=\"安装和初始化\" href=\"#ge94or\"></a>安装和初始化</h3><div data-type=\"p\"></div><pre data-syntax=\"bash\"><code class=\"language-bash\">$ npm install -g create-react-app\n</code></pre><div data-type=\"p\"></div><h3 id=\"g3izxy\" data-type=\"h\"><a class=\"anchor\" id=\"新建项目\" href=\"#g3izxy\"></a>新建项目</h3><div data-type=\"p\"></div><pre data-syntax=\"jsx\"><code class=\"language-jsx\">npx create-react-app noform-app\ncd noform-app\nnpm start\n</code></pre><div data-type=\"p\"></div><div data-type=\"p\"><span data-type=\"background\" style=\"background-color:rgb(255, 255, 255)\"><span data-type=\"color\" style=\"color:#262626\">当然你也可以使用</span></span><code><span data-type=\"background\" style=\"background-color:rgb(255, 255, 255)\"><span data-type=\"color\" style=\"color:#262626\">yarn</span></span></code><span data-type=\"background\" style=\"background-color:rgb(255, 255, 255)\"><span data-type=\"color\" style=\"color:#262626\">，这里不赘述了。看到 </span></span><code><span data-type=\"color\" style=\"color:#262626\">Welcome to React</span></code><span data-type=\"background\" style=\"background-color:rgb(255, 255, 255)\"><span data-type=\"color\" style=\"color:#262626\"> </span></span><span data-type=\"color\" style=\"color:#262626\">就表示已经创建成功了，接下来我们接入next组件和NoForm。</span></div><div data-type=\"p\"></div><h3 id=\"2qezpz\" data-type=\"h\"><a class=\"anchor\" id=\"引入antd和noform\" href=\"#2qezpz\"></a>引入antd和NoForm</h3><div data-type=\"p\"></div><pre data-syntax=\"bash\"><code class=\"language-bash\">$ npm install --save @alifd/next noform nowrapper\n</code></pre><div data-type=\"p\"></div><h3 id=\"8cktph\" data-type=\"h\"><a class=\"anchor\" id=\"配置优化\" href=\"#8cktph\"></a>配置优化</h3><div data-type=\"p\"></div><div data-type=\"p\">create-react-app最酷的一点是，人们不需要任何配置就可以把React应用run起来，但是修改配置的时候又会很痛苦。<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://github.com/timarney/react-app-rewired\" class=\"bi-link\"> react-app-rewired</a> 就是解决这个痛点的社区方案。</div><div data-type=\"p\"></div><pre data-syntax=\"bash\"><code class=\"language-bash\">$ npm install --save-dev react-app-rewired\n</code></pre><div data-type=\"p\"></div><h3 id=\"tc5heu\" data-type=\"h\"><a class=\"anchor\" id=\"加载scss样式\" href=\"#tc5heu\"></a>加载scss样式</h3><div data-type=\"p\"></div><pre data-syntax=\"bash\"><code class=\"language-bash\">$ npm install --save react-app-rewire-sass\n</code></pre><div data-type=\"p\"></div><h3 id=\"p0derf\" data-type=\"h\"><a class=\"anchor\" id=\"编写配置\" href=\"#p0derf\"></a>编写配置</h3><div data-type=\"p\"></div><pre data-syntax=\"jsx\"><code class=\"language-jsx\">const rewireSass = require(&#x27;react-app-rewire-sass&#x27;);\n\n/* config-overrides.js */\nmodule.exports = function override(config, env) {\n  config = rewireSass(config, env);\n  return config;\n}\n</code></pre><div data-type=\"p\"></div><h3 id=\"5teslp\" data-type=\"h\"><a class=\"anchor\" id=\"脚本更新\" href=\"#5teslp\"></a>脚本更新</h3><div data-type=\"p\"></div><div data-type=\"p\">配置撸完了，现在着手编写代码吧。</div><div data-type=\"p\"></div><ol start=\"1\" data-type=\"unordered-list\"><li data-type=\"list-item\" data-list-type=\"unordered-list\"><div data-type=\"p\">首先编写样式文件</div></li></ol><div data-type=\"p\"></div><pre data-syntax=\"css\"><code class=\"language-css\">// src/App.scss\n@import &#x27;~noform/index.scss&#x27;;\n@import &#x27;~nowrapper/lib/next/index.scss&#x27;;\n@import &#x27;~nowrapper/lib/next/repeater.scss&#x27;;\n\n</code></pre><div data-type=\"p\"></div><ol start=\"2\" data-type=\"unordered-list\"><li data-type=\"list-item\" data-list-type=\"unordered-list\"><div data-type=\"p\">编写主要代码</div></li></ol><div data-type=\"p\"></div><pre data-syntax=\"jsx\"><code class=\"language-jsx\">// src/App.js\nimport React, { Component } from &#x27;react&#x27;;\nimport Form, { FormItem, FormCore, If } from &#x27;noform&#x27;;\nimport { Input, Select } from &#x27;nowrapper/lib/next&#x27;;\nimport { Button } from &#x27;antd&#x27;;\nimport &#x27;./App.scss&#x27;;\n\nconst dataSource = [\n    { label: &#x27;optA&#x27;, value: &#x27;optA&#x27;},\n    { label: &#x27;optB&#x27;, value: &#x27;optB&#x27;}\n];\n\nclass App extends Component {\n    constructor(props, context) {\n        super(props, context);\n        window.core = this.core = new FormCore();\n    }\n\n    setStatus = (status) =&gt; {\n        this.core.setGlobalStatus(status);\n    }\n\n    render() {\n        return (\n            &lt;Form core={this.core} layout={{ label: 8, control: 16 }}&gt;\n                &lt;FormItem label=&quot;input&quot; name=&quot;input&quot;&gt;&lt;Input /&gt;&lt;/FormItem&gt;\n                &lt;FormItem label=&quot;select&quot; name=&quot;select&quot;&gt;&lt;Select dataSource={dataSource} /&gt;&lt;/FormItem&gt;\n                &lt;If when={(values, { globalStatus }) =&gt; {\n                    return !!values.select;\n                }}&gt;\n                &lt;FormItem label=&quot;bingo!&quot;&gt;&lt;span&gt;🎉&lt;/span&gt;&lt;/FormItem&gt;\n                &lt;/If&gt;\n                &lt;FormItem label=&quot;Global status&quot;&gt;\n                    &lt;div &gt;\n                        &lt;Button style={{ marginRight: 12 }} onClick={this.core.reset.bind(this.core)}&gt;Clear&lt;/Button&gt;\n                        &lt;Button style={{ marginRight: 12 }} onClick={this.setStatus.bind(this, &#x27;edit&#x27;)}&gt;Edit&lt;/Button&gt;\n                        &lt;Button style={{ marginRight: 12 }} onClick={this.setStatus.bind(this, &#x27;preview&#x27;)}&gt;Preview&lt;/Button&gt;\n                        &lt;Button style={{ marginRight: 12 }} onClick={this.setStatus.bind(this, &#x27;disabled&#x27;)}&gt;Disabled&lt;/Button&gt;\n                    &lt;/div&gt;\n                &lt;/FormItem&gt;\n            &lt;/Form&gt;\n        );\n    }\n}\n\nexport default App;\n</code></pre><div data-type=\"p\"></div><ol start=\"3\" data-type=\"unordered-list\"><li data-type=\"list-item\" data-list-type=\"unordered-list\"><div data-type=\"p\">重新启动</div></li></ol><div data-type=\"p\"></div><pre data-syntax=\"bash\"><code class=\"language-bash\">$ npm start\n</code></pre><div data-type=\"p\"></div><h3 id=\"gl4dlq\" data-type=\"h\"><a class=\"anchor\" id=\"wow\" href=\"#gl4dlq\"></a>Wow</h3><div data-type=\"p\"></div><div data-type=\"p\">当你能够顺利切换状态的时候，恭喜你！已经完成了最佳实践的教程，现在可以继续查看其它文档。</div>","public":1,"status":null,"likes_count":0,"comments_count":0,"content_updated_at":"2018-12-11T00:49:50.000Z","deleted_at":null,"created_at":"2018-11-30T16:50:49.000Z","updated_at":"2018-12-11T00:49:50.000Z","published_at":"2018-12-11T00:49:50.000Z","first_published_at":null,"word_count":631,"cover":null,"description":"本文会使用create-react-app作为脚手架，然后在创建的工程里使用 NoForm 和 next 组件 的结合，快速的编写表单应用。当然，你也可以直接clone 这个项目 在这里面我们集成了各种实用的例子。安装和初始化$ npm install -g create-react-app ...","custom_description":null,"_serializer":"v2.doc_detail"}