{"id":1043950,"slug":"formcore-api","title":"formCore","book_id":187346,"book":{"id":187346,"type":"Book","slug":"noform","name":"NoForm","user_id":222786,"description":"NoForm - 让天下没有难做的表单","creator_id":110109,"public":1,"items_count":31,"likes_count":0,"watches_count":1,"content_updated_at":"2018-12-15T02:46:15.948Z","updated_at":"2018-12-15T02:46:15.000Z","created_at":"2018-12-11T00:41:54.000Z","namespace":"nopage/noform","user":{"id":222786,"type":"Group","login":"nopage","name":"NoPage","description":"NoPage - 让天下没有难做的CRUD","avatar_url":"https://gw.alipayobjects.com/zos/rmsportal/SZXCSCJTuhRSmAggBlVp.png","large_avatar_url":"https://gw.alipayobjects.com/zos/rmsportal/SZXCSCJTuhRSmAggBlVp.png?x-oss-process=image/resize,m_fill,w_320,h_320","medium_avatar_url":"https://gw.alipayobjects.com/zos/rmsportal/SZXCSCJTuhRSmAggBlVp.png?x-oss-process=image/resize,m_fill,w_160,h_160","small_avatar_url":"https://gw.alipayobjects.com/zos/rmsportal/SZXCSCJTuhRSmAggBlVp.png?x-oss-process=image/resize,m_fill,w_80,h_80","books_count":5,"public_books_count":4,"followers_count":0,"following_count":0,"created_at":"2018-12-11T00:38:10.000Z","updated_at":"2018-12-11T08:20:27.000Z","_serializer":"v2.user"},"_serializer":"v2.book"},"user_id":110109,"creator":{"id":110109,"type":"User","login":"guishu","name":"鬼鼠","description":null,"avatar_url":"https://cdn.yuque.com/yuque/0/2018/png/110109/1527234002873-avatar/2ccdab19-b7e2-42d6-b097-f42de766f94c.png","large_avatar_url":"https://cdn.yuque.com/yuque/0/2018/png/110109/1527234002873-avatar/2ccdab19-b7e2-42d6-b097-f42de766f94c.png?x-oss-process=image/resize,m_fill,w_320,h_320","medium_avatar_url":"https://cdn.yuque.com/yuque/0/2018/png/110109/1527234002873-avatar/2ccdab19-b7e2-42d6-b097-f42de766f94c.png?x-oss-process=image/resize,m_fill,w_160,h_160","small_avatar_url":"https://cdn.yuque.com/yuque/0/2018/png/110109/1527234002873-avatar/2ccdab19-b7e2-42d6-b097-f42de766f94c.png?x-oss-process=image/resize,m_fill,w_80,h_80","books_count":3,"public_books_count":1,"followers_count":0,"following_count":0,"created_at":"2018-04-24T06:58:34.000Z","updated_at":"2018-12-14T07:36:21.000Z","_serializer":"v2.user"},"format":"asl","body":"","body_draft":"","body_html":"<h1 id=\"h753gt\" data-type=\"h\"><a class=\"anchor\" id=\"api\" href=\"#h753gt\"></a>API</h1><div data-type=\"p\"></div><h1 id=\"gxgynd\" data-type=\"h\"><a class=\"anchor\" id=\"初始化\" href=\"#gxgynd\"></a>初始化</h1><div data-type=\"p\"></div><h3 id=\"l1cipo\" data-type=\"h\"><a class=\"anchor\" id=\"引入\" href=\"#l1cipo\"></a>引入</h3><div data-type=\"p\"></div><pre data-syntax=\"\"><code class=\"language-\">import Form, { FormItem, Item, If, FormCore } = noform;\n</code></pre><div data-type=\"p\"></div><h3 id=\"fyphlu\" data-type=\"h\"><a class=\"anchor\" id=\"构建核心\" href=\"#fyphlu\"></a>构建核心</h3><div data-type=\"p\"></div><pre data-syntax=\"jsx\"><code class=\"language-jsx\">componentDidMount = () =&gt; {\n    const opts = { // constructor params\n        values, // field&#x27;s values eg. { username: &#x27;bobby&#x27;, age: 18 }\n        status, // field&#x27;s status eg. { username: &#x27;edit&#x27;, age, &#x27;preview&#x27; ... }\n        globalStatus, // global Status ENUM [&#x27;edit&#x27;, &#x27;preview&#x27;, &#x27;disabled&#x27;]\n        interceptor, // interceptor\n        onChange, // handler when values change\n        validateConfig, // validate rules\n    };\n    this.core = new FormCore(opts);\n}\n</code></pre><div data-type=\"p\"></div><h1 id=\"ha6sww\" data-type=\"h\"><a class=\"anchor\" id=\"onchange-监听变更\" href=\"#ha6sww\"></a>onChange 监听变更</h1><div data-type=\"p\"></div><div data-type=\"p\">两种注册onChange的方法，一种在构建时设定，一种监听<code>change</code>事件。</div><div data-type=\"p\"></div><pre data-syntax=\"jsx\"><code class=\"language-jsx\">// Arguments:\n// * changeKeys: array    keys of changed fields 变更的字段名数组\n// * values:      object   values of all the fields of form 当前表单的所有值\n// * core:       FormCore FormCore instance 核心实例\nconst handler = (changeKeys, values, core) =&gt; {}\n\n// way 1： Setting as consturctor arguments.\nthis.core = new FormCore({\n    onChange: handler\n})\n\n// way 2： Register &#x27;change&#x27; event.\nthis.core.on(&#x27;change&#x27;, handler)\n</code></pre><div data-type=\"p\"></div><h1 id=\"942vmq\" data-type=\"h\"><a class=\"anchor\" id=\"interceptor-拦截器\" href=\"#942vmq\"></a>interceptor 拦截器</h1><div data-type=\"p\"></div><div data-type=\"p\">拦截器能够在设置值之前做自定义的修改, interceptor接受方法，返回值可以是 <code>值</code> 或 <code>promise</code></div><div data-type=\"p\"></div><pre data-syntax=\"jsx\"><code class=\"language-jsx\">new FormCore({\n    interceptor: {\n        money: (rawMoney) =&gt; {\n            return parseInt(rawMoney); // or Promise\n        },\n        lazyMoney: async () =&gt; {\n            const money = await remoteCalculateMoney();\n            return money;\n        }\n    }\n})\n</code></pre><div data-type=\"p\"></div><h1 id=\"78y1ut\" data-type=\"h\"><a class=\"anchor\" id=\"核心操作\" href=\"#78y1ut\"></a>核心操作</h1><div data-type=\"p\"></div><h3 id=\"cxy7kz\" data-type=\"h\"><a class=\"anchor\" id=\"获取-修改值(values)\" href=\"#cxy7kz\"></a>获取/修改值(values)</h3><div data-type=\"p\"></div><div data-type=\"p\">每次执行setValue/setValues方法会触发<code>onChange</code>变更</div><div data-type=\"p\"></div><pre data-syntax=\"jsx\"><code class=\"language-jsx\">this.core.getValues(); // 获取整体表单的值\nthis.core.getValue(&#x27;username&#x27;); // 获取单字段值\nthis.core.setValues({ username: &#x27;bobby&#x27; }); // 设置整体表单的值\nthis.core.setValue(&#x27;username&#x27;, &#x27;bobby&#x27;); // 设置单字段的值\n</code></pre><div data-type=\"p\"></div><h3 id=\"fn22zd\" data-type=\"h\"><a class=\"anchor\" id=\"获取-修改状态(status)\" href=\"#fn22zd\"></a>获取/修改状态(status)</h3><div data-type=\"p\"></div><div data-type=\"p\">状态枚举包含: <code>edit</code>, <code>preview</code>, <code>disabled</code> 三种状态</div><div data-type=\"p\"></div><pre data-syntax=\"jsx\"><code class=\"language-jsx\">this.core.getStatus(); // 获取整体表单的状态\nthis.core.getStatus(&#x27;username&#x27;); // 获取单字段状态\nthis.core.setStatus({ username: &#x27;preview&#x27; }); // 设置整体表单的状态\nthis.core.setStatus(&#x27;username&#x27;, &#x27;disabled&#x27;); // 设置单字段的状态\nthis.core.getGlobalStatus(); // 获取全局状态\nthis.core.setGlobalStatus(&#x27;edit&#x27;); // 设置全局状态\n</code></pre><div data-type=\"p\"></div><h3 id=\"pv67sx\" data-type=\"h\"><a class=\"anchor\" id=\"获取-修改属性信息(props)\" href=\"#pv67sx\"></a>获取/修改属性信息(props)</h3><div data-type=\"p\"></div><div data-type=\"p\">FormItem属性保留字为： <code>label</code>, <code>prefix</code>, <code>suffix</code>, <code>help</code>, <code>hint</code>, <code>top</code>, <code>required</code></div><div data-type=\"p\"></div><pre data-syntax=\"jsx\"><code class=\"language-jsx\">this.core.getProps(&#x27;username&#x27;); // get props of single item\nthis.core.setProps(&#x27;username&#x27;, { dataSource: [\n    { label: &#x27;bobby&#x27;, value: &#x27;bobby&#x27;},\n    { label: &#x27;leslie&#x27;, value: &#x27;leslie&#x27;}\n] }); // set props of single item\n</code></pre><div data-type=\"p\"></div><div data-type=\"p\">setProps最常用的场景是替换类似<code>&lt;Select&gt;</code>组件的dataSource，并且不会像setState引起全局的渲染。 NoForm的治理思想是state和core不混用，表单页面仅仅使用core来控制，避免不必要的渲染。</div><div data-type=\"p\"></div><pre data-syntax=\"jsx\"><code class=\"language-jsx\">this.core.setProps(&#x27;select&#x27;, { dataSource: [] });\n</code></pre><div data-type=\"p\"></div><h3 id=\"nqvoif\" data-type=\"h\"><a class=\"anchor\" id=\"获取-修改错误信息(error)\" href=\"#nqvoif\"></a>获取/修改错误信息(error)</h3><div data-type=\"p\"></div><div data-type=\"p\">注： 错误信息的空值为null</div><div data-type=\"p\"></div><pre data-syntax=\"jsx\"><code class=\"language-jsx\">this.core.getError(); // 获取整体表单的错误信息\nthis.core.getError(&#x27;username&#x27;); // 获取单字段错误信息\nthis.core.setError({ username: &#x27;username is required&#x27; }); // 设置整体表单的错误信息\nthis.core.setError(&#x27;username&#x27;, &#x27;username is required&#x27;); // 设置单字段的错误信息\n</code></pre><blockquote><div data-type=\"p\">注：setError是实现校验的底层的方法，如需校验表单，请查看<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://alibaba.github.io/noform/#/zh-CN/docs?md=basic/validation\" class=\"bi-link\">校验章节</a>了解更多。</div></blockquote><div data-type=\"p\"></div><div data-type=\"p\"></div>","public":1,"status":null,"likes_count":0,"comments_count":0,"content_updated_at":"2018-12-11T00:14:36.000Z","deleted_at":null,"created_at":"2018-12-11T00:10:09.000Z","updated_at":"2018-12-11T00:42:43.000Z","published_at":"2018-12-11T00:14:36.000Z","word_count":674,"_serializer":"v2.doc_detail"}